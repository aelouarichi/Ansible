---
- hosts: localhost
  connection : local
  gather_facts: false


  tasks:
    - name: Get playbook variables
      include_vars:
        file: vars.yml
    - name: VM_name
      debug:
       msg: "{{ VM_name }}"
    - name: VM_size
      debug:
       msg: "{{ VM_size }}"
    - name: VM_Offer
      debug:
       msg: "{{ Image_offer }}"

    - name: Create virtual network
      local_action:
        module: azure_rm_virtualnetwork
        resource_group: "{{ RG }}"
        name: snowvnet
        address_prefixes: "10.10.0.0/16"
        

    - name: create virtual machine
      local_action:
        module: azure_rm_virtualmachine
        resource_group: "{{ RG }}"
        name: "{{ VM_name }}"
        vm_size: "{{ VM_size }}"
        admin_username: "{{ admin_uname }}"
        admin_password: "{{ admin_passwd }}"
        image:
          offer: "{{ Image_offer }}"
          publisher: "{{ Image_publisher }}"
          sku: "{{ Image_sku }}"
          version: latest
      register: output
    - debug:
       var: output
       var: output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress 
       
    - name: Posting to SNOW API
      local_action:
        module: uri
        url: "{{ url_snow }}"
        user: "{{ user_snow }}"
        password: "{{user_snow }}"
        method: POST
        return_content: yes
        headers:
          Content-Type: application/json
        body_format: json
        body:
          {"IP_adress":"{{ output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}",
          }
        #status_code: 201
        validate_certs: no
      register: snow_response
    - debug:
        var: snow_response
      when: output|success

   
                                                                                                    

    
